{"version":3,"sources":["firebase.js","actions/types.js","actions/index.js","components/ColorPanel/ColorPanel.js","components/SidePanel/UserPanel.js","components/SidePanel/Channels.js","components/SidePanel/DirectMessages.js","components/SidePanel/Starred.js","components/SidePanel/SidePanel.js","components/Messages/MessagesHeader.js","components/Messages/FileModal.js","components/Messages/ProgressBar.js","components/Messages/MessageForm.js","components/Messages/Message.js","components/Messages/Typing.js","components/Messages/Skeleton.js","components/Messages/Messages.js","components/MetaPanel/MetaPanel.js","components/App.js","components/Auth/Login.js","components/Auth/Register.js","Spinner.js","registerServiceWorker.js","reducers/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","storage","SET_USER","CLEAR_USER","SET_CURRENT_CHANNEL","SET_PRIVATE_CHANNEL","SET_USER_POSTS","SET_COLORS","setCurrentChannel","channel","type","actionTypes","payload","currentChannel","setPrivateChannel","isPrivateChannel","ColorPanel","state","modal","primary","secondary","user","props","currentUser","usersRef","ref","userColors","removeListener","child","uid","off","addListener","userId","on","snap","unshift","val","setState","handleChangePrimary","color","hex","handleChangeSecondary","handleSaveColors","saveColors","push","update","then","console","log","closeModal","catch","err","error","displayUserColors","colors","length","map","i","Fragment","Divider","className","onClick","setColors","style","background","openModal","this","Sidebar","as","Menu","icon","inverted","vertical","visible","width","Button","size","Modal","basic","open","onClose","Header","Content","Segment","Label","content","onChange","Actions","Icon","name","React","Component","connect","primaryColor","secondaryColor","UserPanel","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","userRef","metadata","contentType","dropdownOptions","key","text","displayName","disabled","handleSignout","uploadCroppedImage","put","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","avatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","signOut","Grid","Column","Row","padding","margin","floated","Dropdown","trigger","Image","src","spaced","options","Input","fluid","label","centered","stackable","columns","node","image","height","border","scale","Channels","activeChannel","channels","channelName","channelDetails","channelsRef","messagesRef","typingRef","notifications","firstLoad","addListeners","loadedChannels","setFirstChannel","addNotificationListener","channelId","handleNotifications","id","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","removeListeners","forEach","firstChannel","setActiveChannel","addChannel","newChannel","details","createdBy","handleSubmit","preventDefault","isFormValid","value","changeChannel","remove","clearNotifications","updatedNotifications","getNotificationCount","displayChannels","Item","opacity","active","Form","onSubmit","Field","DirectMessages","users","connectedRef","presenceRef","currentUserUid","loadedUsers","set","onDisconnect","addStatusToUser","connected","updatedUsers","reduce","acc","concat","isUserOnline","status","channelData","getChannelId","currentUserId","fontStyle","Starred","starredChannels","starredChannel","channelToRemove","filteredChannels","filter","SidePanel","fixed","fontSize","MessagesHeader","numUniqueUsers","handleSearchChange","searchLoading","handleStar","isChannelStarred","clearing","marginBottom","Subheader","loading","placeholder","FileModal","authorized","addFile","sendFile","uploadFile","isAuthorized","mime","lookup","clearFile","filename","includes","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","MessageForm","uploadTask","message","errors","emojiPicker","handleKeyDown","ctrlKey","keyCode","sendMessage","handleTogglePicker","handleAddEmoji","emoji","oldMessage","newMessage","colonToUnicode","colons","setTimeout","messageInputRef","focus","replace","x","emojiIndex","emojis","unicode","native","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","getMessagesRef","toLocaleLowerCase","arraynames","alert","getPath","pathToUpload","filePath","uuidv4","Math","round","bytesTransferred","totalBytes","snapshot","downloadUrl","sendFileMessage","cancel","onSelect","title","onKeyDown","labelPosition","some","Group","widths","isOwnMessage","isImage","hasOwnProperty","Message","Comment","Avatar","Author","Metadata","moment","fromNow","Text","Typing","Skeleton","Messages","privateChannel","privateMessagesRef","messages","messagesLoading","searchTerm","searchResults","typingUsers","listeners","listener","addToListeners","newListener","scrollToBottom","messagesEnd","scrollIntoView","behavior","addMessageListener","addTypingListeners","loadedMessages","countUniqueUsers","countUserPosts","addUserStarsListener","once","data","prevStarred","Object","keys","prevState","starChannel","handleSearchMessages","channelMessages","regex","RegExp","match","uniqueUsers","plural","userPosts","setUserPosts","displayMessages","displayChannelName","displayTypingUsers","display","alignItems","displayMessageSkeleton","Array","_","prevProps","MetaPanel","activeIndex","setActiveIndex","titleProps","newIndex","formatCount","num","displayTopPosters","posts","entries","sort","a","b","List","Description","slice","attached","Accordion","styled","Title","circular","marginLeft","Login","email","password","displayErrors","signInWithEmailAndPassword","signedInUser","handleInputError","inputName","toLowerCase","textAlign","verticalAlign","maxWidth","stacked","iconPosition","Link","to","Register","username","passwordConfirmation","isFormEmpty","isPasswordValid","createUserWithEmailAndPassword","createdUser","md5","saveUser","Spinner","Dimmer","Loader","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialUserState","isLoading","initialChannelState","initialColorsState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","Switch","Route","exact","path","component","App","RootWithAuth","withRouter","ReactDOM","render","document","getElementById","process","origin","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0146109f.chunk.js","sourcesContent":["//import firebase from \"firebase/app\";\n// import \"firebase/auth\";\n// import \"firebase/database\";\n// import \"firebase/storage\";\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database'\nimport 'firebase/compat/storage'\n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCVZfPvQjydqpAFF0xmdcM1nGaBWGr8er0\",\n  authDomain: \"ju-chat-connect.firebaseapp.com\",\n  projectId: \"ju-chat-connect\",\n  storageBucket: \"ju-chat-connect.appspot.com\",\n  messagingSenderId: \"492159282815\",\n  appId: \"1:492159282815:web:4f0d7dbd698d4b800c994a\",\n  measurementId: \"G-G3TP9JWTKB\"\n};\nfirebase.initializeApp(firebaseConfig)\n\nconst auth = firebase.auth()\nconst database = firebase.database()\nconst storage=firebase.storage()\n \nexport default firebase;\n\n// Initialize Firebase\n  \n\n\n","/* User Action Types */\nexport const SET_USER = \"SET_USER\";\nexport const CLEAR_USER = \"CLEAR_USER\";\n\n/* Channel Action Types */\nexport const SET_CURRENT_CHANNEL = \"SET_CURRENT_CHANNEL\";\nexport const SET_PRIVATE_CHANNEL = \"SET_PRIVATE_CHANNEL\";\nexport const SET_USER_POSTS = \"SET_USER_POSTS\";\n\n/* Colors Action Types */\nexport const SET_COLORS = \"SET_COLORS\";\n","import * as actionTypes from \"./types\";\nimport { useState } from \"react\";\n\n/* User Actions */\nexport const setUser = user => {\n  return {\n    type: actionTypes.SET_USER,\n    payload: {\n      currentUser: user\n    }\n  };\n};\n\nexport const clearUser = () => {\n  return {\n    type: actionTypes.CLEAR_USER\n  };\n};\n\n/* Channel Actions */\nexport const setCurrentChannel = channel => {\n  return {\n    type: actionTypes.SET_CURRENT_CHANNEL,\n    payload: {\n      currentChannel: channel\n    }\n  };\n};\n\nexport const setPrivateChannel = isPrivateChannel => {\n  return {\n    type: actionTypes.SET_PRIVATE_CHANNEL,\n    payload: {\n      isPrivateChannel\n    }\n  };\n};\n\nexport const setUserPosts = userPosts => {\n  return {\n    type: actionTypes.SET_USER_POSTS,\n    payload: {\n      userPosts\n    }\n  };\n};\n\n/* Colors Actions */\nexport const setColors = (primaryColor, secondaryColor) => {\n  return {\n    type: actionTypes.SET_COLORS,\n    payload: {\n      primaryColor,\n      secondaryColor\n    }\n  };\n};\n\n// const [bg, setbg] = useState('0');\n// const [name, setname] = useState('Send As Anonymous');\n// const bgChanges=()=>{\n//   //let newbg='1';\n//   setbg('1');\n//   setname('You are now anonymous');\n// }\n// const bgBack=()=>{\n//   //let newbg='1';\n//   setbg('0');\n//   setname('Send As Anonymous');\n// }\n\n// export const val=(name)=> {\n//   name=document.getElementById(\"name\").value;\n//   arraynames=['Hey','Yaw','Damn'];\n//   for(i=0;i<arraynames.length;i++){\n//     if (arraynames[i]==name){\n//       alert(\"You must not say that\")\n//       return false;\n//     }\n//   }\n// };","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setColors } from \"../../actions\";\n// prettier-ignore\nimport { Sidebar, Menu, Divider, Button, Modal, Icon, Label, Segment } from \"semantic-ui-react\";\nimport { SliderPicker } from \"react-color\";\n\nclass ColorPanel extends React.Component {\n  state = {\n    modal: false,\n    primary: \"\",\n    secondary: \"\",\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    userColors: []\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListener(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListener();\n  }\n\n  removeListener = () => {\n    this.state.usersRef.child(`${this.state.user.uid}/colors`).off();\n  };\n\n  addListener = userId => {\n    let userColors = [];\n    this.state.usersRef.child(`${userId}/colors`).on(\"child_added\", snap => {\n      userColors.unshift(snap.val());\n      this.setState({ userColors });\n    });\n  };\n\n  handleChangePrimary = color => this.setState({ primary: color.hex });\n\n  handleChangeSecondary = color => this.setState({ secondary: color.hex });\n\n  handleSaveColors = () => {\n    if (this.state.primary && this.state.secondary) {\n      this.saveColors(this.state.primary, this.state.secondary);\n    }\n  };\n\n  saveColors = (primary, secondary) => {\n    this.state.usersRef\n      .child(`${this.state.user.uid}/colors`)\n      .push()\n      .update({\n        primary,\n        secondary\n      })\n      .then(() => {\n        console.log(\"Colors added\");\n        this.closeModal();\n      })\n      .catch(err => console.error(err));\n  };\n\n  displayUserColors = colors =>\n    colors.length > 0 &&\n    colors.map((color, i) => (\n      <React.Fragment key={i}>\n        <Divider />\n        <div\n          className=\"color__container\"\n          onClick={() => this.props.setColors(color.primary, color.secondary)}\n        >\n          <div className=\"color__square\" style={{ background: color.primary }}>\n            <div\n              className=\"color__overlay\"\n              style={{ background: color.secondary }}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    ));\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  render() {\n    const { modal, primary, secondary, userColors } = this.state;\n\n    return (\n      <Sidebar\n        as={Menu}\n        icon=\"labeled\"\n        inverted\n        vertical\n        visible\n        width=\"very thin\"\n      >\n        <Divider />\n        <Button icon=\"add\" size=\"small\" color=\"blue\" onClick={this.openModal} />\n        {this.displayUserColors(userColors)}\n\n        {/* Color Picker Modal */}\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Choose App Colors</Modal.Header>\n          <Modal.Content>\n            <Segment inverted>\n              <Label content=\"Primary Color\" />\n              <SliderPicker\n                color={primary}\n                onChange={this.handleChangePrimary}\n              />\n            </Segment>\n\n            <Segment inverted>\n              <Label content=\"Secondary Color\" />\n              <SliderPicker\n                color={secondary}\n                onChange={this.handleChangeSecondary}\n              />\n            </Segment>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleSaveColors}>\n              <Icon name=\"checkmark\" /> Save Colors\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Sidebar>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setColors }\n)(ColorPanel);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport AvatarEditor from \"react-avatar-editor\";\n// prettier-ignore\nimport { Grid, Header, Icon, Dropdown, Image, Modal, Input, Button } from \"semantic-ui-react\";\n\nclass UserPanel extends React.Component {\n  state = {\n    user: this.props.currentUser,\n    modal: false,\n    previewImage: \"\",\n    croppedImage: \"\",\n    blob: null,\n    uploadedCroppedImage: \"\",\n    storageRef: firebase.storage().ref(),\n    userRef: firebase.auth().currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    metadata: {\n      contentType: \"image/jpeg\"\n    }\n  };\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  dropdownOptions = () => [\n    {\n      key: \"user\",\n      text: (\n        <span>\n          Signed in as <strong>{this.state.user.displayName}</strong>\n        </span>\n      ),\n      disabled: true\n    },\n    {\n      key: \"avatar\",\n      text: <span onClick={this.openModal}>Change Avatar</span>\n    },\n    {\n      key: \"signout\",\n      text: <span onClick={this.handleSignout}>Sign Out</span>\n    }\n  ];\n\n  uploadCroppedImage = () => {\n    const { storageRef, userRef, blob, metadata } = this.state;\n\n    storageRef\n      .child(`avatars/users/${userRef.uid}`)\n      .put(blob, metadata)\n      .then(snap => {\n        snap.ref.getDownloadURL().then(downloadURL => {\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\n            this.changeAvatar()\n          );\n        });\n      });\n  };\n\n  changeAvatar = () => {\n    this.state.userRef\n      .updateProfile({\n        photoURL: this.state.uploadedCroppedImage\n      })\n      .then(() => {\n        console.log(\"PhotoURL updated\");\n        this.closeModal();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n    this.state.usersRef\n      .child(this.state.user.uid)\n      .update({ avatar: this.state.uploadedCroppedImage })\n      .then(() => {\n        console.log(\"User avatar updated\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  handleChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    if (file) {\n      reader.readAsDataURL(file);\n      reader.addEventListener(\"load\", () => {\n        this.setState({ previewImage: reader.result });\n      });\n    }\n  };\n\n  handleCropImage = () => {\n    if (this.avatarEditor) {\n      this.avatarEditor.getImageScaledToCanvas().toBlob(blob => {\n        let imageUrl = URL.createObjectURL(blob);\n        this.setState({\n          croppedImage: imageUrl,\n          blob\n        });\n      });\n    }\n  };\n\n  handleSignout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => console.log(\"signed out!\"));\n  };\n\n  render() {\n    const { user, modal, previewImage, croppedImage } = this.state;\n    const { primaryColor } = this.props;\n\n    return (\n      <Grid style={{ background: primaryColor }}>\n        <Grid.Column>\n          <Grid.Row style={{ padding: \"1.2em\", margin: 0 }}>\n            {/* App Header */}\n            <Header inverted floated=\"left\" as=\"h2\">\n              <Icon name=\"comment alternate\" />\n              <Header.Content>eConnect Chat</Header.Content>\n            </Header>\n\n            {/* User Dropdown  */}\n            <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\n              <Dropdown\n                trigger={\n                  <span>\n                    <Image src={user.photoURL} spaced=\"right\" avatar />\n                    {user.displayName}\n                  </span>\n                }\n                options={this.dropdownOptions()}\n              />\n            </Header>\n          </Grid.Row>\n\n          {/* Change User Avatar Modal   */}\n          <Modal basic open={modal} onClose={this.closeModal}>\n            <Modal.Header>Change Avatar</Modal.Header>\n            <Modal.Content>\n              <Input\n                onChange={this.handleChange}\n                fluid\n                type=\"file\"\n                label=\"New Avatar\"\n                name=\"previewImage\"\n              />\n              <Grid centered stackable columns={2}>\n                <Grid.Row centered>\n                  <Grid.Column className=\"ui center aligned grid\">\n                    {previewImage && (\n                      <AvatarEditor\n                        ref={node => (this.avatarEditor = node)}\n                        image={previewImage}\n                        width={120}\n                        height={120}\n                        border={50}\n                        scale={1.2}\n                      />\n                    )}\n                  </Grid.Column>\n                  <Grid.Column>\n                    {croppedImage && (\n                      <Image\n                        style={{ margin: \"3.5em auto\" }}\n                        width={100}\n                        height={100}\n                        src={croppedImage}\n                      />\n                    )}\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Modal.Content>\n            <Modal.Actions>\n              {croppedImage && (\n                <Button\n                  color=\"green\"\n                  inverted\n                  onClick={this.uploadCroppedImage}\n                >\n                  <Icon name=\"save\" /> Change Avatar\n                </Button>\n              )}\n              <Button color=\"green\" inverted onClick={this.handleCropImage}>\n                <Icon name=\"image\" /> Preview\n              </Button>\n              <Button color=\"red\" inverted onClick={this.closeModal}>\n                <Icon name=\"remove\" /> Cancel\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default UserPanel;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\n// prettier-ignore\nimport { Menu, Icon, Modal, Form, Input, Button, Label } from \"semantic-ui-react\";\n\nclass Channels extends React.Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.currentUser,\n    channel: null,\n    channels: [],\n    channelName: \"\",\n    channelDetails: \"\",\n    channelsRef: firebase.database().ref(\"channels\"),\n    messagesRef: firebase.database().ref(\"messages\"),\n    typingRef: firebase.database().ref(\"typing\"),\n    notifications: [],\n    modal: false,\n    firstLoad: true\n  };\n\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  addListeners = () => {\n    let loadedChannels = [];\n    this.state.channelsRef.on(\"child_added\", snap => {\n      loadedChannels.push(snap.val());\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\n      this.addNotificationListener(snap.key);\n    });\n  };\n\n  addNotificationListener = channelId => {\n    this.state.messagesRef.child(channelId).on(\"value\", snap => {\n      if (this.state.channel) {\n        this.handleNotifications(\n          channelId,\n          this.state.channel.id,\n          this.state.notifications,\n          snap\n        );\n      }\n    });\n  };\n\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\n    let lastTotal = 0;\n\n    let index = notifications.findIndex(\n      notification => notification.id === channelId\n    );\n\n    if (index !== -1) {\n      if (channelId !== currentChannelId) {\n        lastTotal = notifications[index].total;\n\n        if (snap.numChildren() - lastTotal > 0) {\n          notifications[index].count = snap.numChildren() - lastTotal;\n        }\n      }\n      notifications[index].lastKnownTotal = snap.numChildren();\n    } else {\n      notifications.push({\n        id: channelId,\n        total: snap.numChildren(),\n        lastKnownTotal: snap.numChildren(),\n        count: 0\n      });\n    }\n\n    this.setState({ notifications });\n  };\n\n  removeListeners = () => {\n    this.state.channelsRef.off();\n    this.state.channels.forEach(channel => {\n      this.state.messagesRef.child(channel.id).off();\n    });\n  };\n\n  setFirstChannel = () => {\n    const firstChannel = this.state.channels[0];\n    if (this.state.firstLoad && this.state.channels.length > 0) {\n      this.props.setCurrentChannel(firstChannel);\n      this.setActiveChannel(firstChannel);\n      this.setState({ channel: firstChannel });\n    }\n    this.setState({ firstLoad: false });\n  };\n\n  addChannel = () => {\n    const { channelsRef, channelName, channelDetails, user } = this.state;\n\n    const key = channelsRef.push().key;\n\n    const newChannel = {\n      id: key,\n      name: channelName,\n      details: channelDetails,\n      createdBy: {\n        name: user.displayName,\n        avatar: user.photoURL\n      }\n    };\n\n    channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        this.setState({ channelName: \"\", channelDetails: \"\" });\n        this.closeModal();\n        console.log(\"channel added\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.addChannel();\n    }\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  changeChannel = channel => {\n    this.setActiveChannel(channel);\n    this.state.typingRef\n      .child(this.state.channel.id)\n      .child(this.state.user.uid)\n      .remove();\n    this.clearNotifications();\n    this.props.setCurrentChannel(channel);\n    this.props.setPrivateChannel(false);\n    this.setState({ channel });\n  };\n\n  clearNotifications = () => {\n    let index = this.state.notifications.findIndex(\n      notification => notification.id === this.state.channel.id\n    );\n\n    if (index !== -1) {\n      let updatedNotifications = [...this.state.notifications];\n      updatedNotifications[index].total = this.state.notifications[\n        index\n      ].lastKnownTotal;\n      updatedNotifications[index].count = 0;\n      this.setState({ notifications: updatedNotifications });\n    }\n  };\n\n  setActiveChannel = channel => {\n    this.setState({ activeChannel: channel.id });\n  };\n\n  getNotificationCount = channel => {\n    let count = 0;\n\n    this.state.notifications.forEach(notification => {\n      if (notification.id === channel.id) {\n        count = notification.count;\n      }\n    });\n\n    if (count > 0) return count;\n  };\n\n  displayChannels = channels =>\n    channels.length > 0 &&\n    channels.map(channel => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        style={{ opacity: 0.7 }}\n        active={channel.id === this.state.activeChannel}\n      >\n        {this.getNotificationCount(channel) && (\n          <Label color=\"red\">{this.getNotificationCount(channel)}</Label>\n        )}\n        # {channel.name}\n      </Menu.Item>\n    ));\n\n  isFormValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  render() {\n    const { channels, modal } = this.state;\n\n    return (\n      <React.Fragment>\n        <Menu.Menu className=\"menu\">\n          <Menu.Item>\n            <span>\n              <Icon name=\"exchange\" /> CHANNELS\n            </span>{\" \"}\n            ({channels.length}) <Icon name=\"add\" onClick={this.openModal} />\n          </Menu.Item>\n          {this.displayChannels(channels)}\n        </Menu.Menu>\n\n        {/* Add Channel Modal */}\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Add a Channel</Modal.Header>\n          <Modal.Content>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"Name of Channel\"\n                  name=\"channelName\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"About the Channel\"\n                  name=\"channelDetails\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n            </Form>\n          </Modal.Content>\n\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\n              <Icon name=\"checkmark\" /> Add\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel, setPrivateChannel }\n)(Channels);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\nimport { Menu, Icon } from \"semantic-ui-react\";\n\nclass DirectMessages extends React.Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.currentUser,\n    users: [],\n    usersRef: firebase.database().ref(\"users\"),\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    presenceRef: firebase.database().ref(\"presence\")\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners = () => {\n    this.state.usersRef.off();\n    this.state.presenceRef.off();\n    this.state.connectedRef.off();\n  };\n\n  addListeners = currentUserUid => {\n    let loadedUsers = [];\n    this.state.usersRef.on(\"child_added\", snap => {\n      if (currentUserUid !== snap.key) {\n        let user = snap.val();\n        user[\"uid\"] = snap.key;\n        user[\"status\"] = \"offline\";\n        loadedUsers.push(user);\n        this.setState({ users: loadedUsers });\n      }\n    });\n\n    this.state.connectedRef.on(\"value\", snap => {\n      if (snap.val() === true) {\n        const ref = this.state.presenceRef.child(currentUserUid);\n        ref.set(true);\n        ref.onDisconnect().remove(err => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n      }\n    });\n\n    this.state.presenceRef.on(\"child_added\", snap => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key);\n      }\n    });\n\n    this.state.presenceRef.on(\"child_removed\", snap => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key, false);\n      }\n    });\n  };\n\n  addStatusToUser = (userId, connected = true) => {\n    const updatedUsers = this.state.users.reduce((acc, user) => {\n      if (user.uid === userId) {\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\n      }\n      return acc.concat(user);\n    }, []);\n    this.setState({ users: updatedUsers });\n  };\n\n  isUserOnline = user => user.status === \"online\";\n\n  changeChannel = user => {\n    const channelId = this.getChannelId(user.uid);\n    const channelData = {\n      id: channelId,\n      name: user.name\n    };\n    this.props.setCurrentChannel(channelData);\n    this.props.setPrivateChannel(true);\n    this.setActiveChannel(user.uid);\n  };\n\n  getChannelId = userId => {\n    const currentUserId = this.state.user.uid;\n    return userId < currentUserId\n      ? `${userId}/${currentUserId}`\n      : `${currentUserId}/${userId}`;\n  };\n\n  setActiveChannel = userId => {\n    this.setState({ activeChannel: userId });\n  };\n\n  render() {\n    const { users, activeChannel } = this.state;\n\n    return (\n      <Menu.Menu className=\"menu\">\n        <Menu.Item>\n          <span>\n            <Icon name=\"mail\" /> DIRECT MESSAGES\n          </span>{\" \"}\n          ({users.length})\n        </Menu.Item>\n        {users.map(user => (\n          <Menu.Item\n            key={user.uid}\n            active={user.uid === activeChannel}\n            onClick={() => this.changeChannel(user)}\n            style={{ opacity: 0.7, fontStyle: \"italic\" }}\n          >\n            <Icon\n              name=\"circle\"\n              color={this.isUserOnline(user) ? \"green\" : \"red\"}\n            />\n            @ {user.name}\n          </Menu.Item>\n        ))}\n      </Menu.Menu>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel, setPrivateChannel }\n)(DirectMessages);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\nimport { Menu, Icon } from \"semantic-ui-react\";\n\nclass Starred extends React.Component {\n  state = {\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    activeChannel: \"\",\n    starredChannels: []\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListener();\n  }\n\n  removeListener = () => {\n    this.state.usersRef.child(`${this.state.user.uid}/starred`).off();\n  };\n\n  addListeners = userId => {\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .on(\"child_added\", snap => {\n        const starredChannel = { id: snap.key, ...snap.val() };\n        this.setState({\n          starredChannels: [...this.state.starredChannels, starredChannel]\n        });\n      });\n\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .on(\"child_removed\", snap => {\n        const channelToRemove = { id: snap.key, ...snap.val() };\n        const filteredChannels = this.state.starredChannels.filter(channel => {\n          return channel.id !== channelToRemove.id;\n        });\n        this.setState({ starredChannels: filteredChannels });\n      });\n  };\n\n  setActiveChannel = channel => {\n    this.setState({ activeChannel: channel.id });\n  };\n\n  changeChannel = channel => {\n    this.setActiveChannel(channel);\n    this.props.setCurrentChannel(channel);\n    this.props.setPrivateChannel(false);\n  };\n\n  displayChannels = starredChannels =>\n    starredChannels.length > 0 &&\n    starredChannels.map(channel => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        style={{ opacity: 0.7 }}\n        active={channel.id === this.state.activeChannel}\n      >\n        # {channel.name}\n      </Menu.Item>\n    ));\n\n  render() {\n    const { starredChannels } = this.state;\n\n    return (\n      <Menu.Menu className=\"menu\">\n        <Menu.Item>\n          <span>\n            <Icon name=\"star\" /> STARRED\n          </span>{\" \"}\n          ({starredChannels.length})\n        </Menu.Item>\n        {this.displayChannels(starredChannels)}\n      </Menu.Menu>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel, setPrivateChannel }\n)(Starred);\n","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport { useState } from \"react\";\nimport UserPanel from \"./UserPanel\";\nimport Channels from \"./Channels\";\nimport DirectMessages from \"./DirectMessages\";\nimport Starred from \"./Starred\";\n\n\n\nclass SidePanel extends React.Component {\n  render() {\n    const { currentUser, primaryColor } = this.props;\n\n    return (\n      <Menu\n        size=\"large\"\n        inverted\n        fixed=\"left\"\n        vertical\n        style={{ background: primaryColor, fontSize: \"1.2rem\" }}\n      >\n        <UserPanel primaryColor={primaryColor} currentUser={currentUser} />\n        <Starred currentUser={currentUser} />\n        <Channels currentUser={currentUser} />\n        <DirectMessages currentUser={currentUser} />\n        \n      </Menu>\n    );\n  }\n}\n\nexport default SidePanel;\n","import React from \"react\";\nimport { Header, Segment, Input, Icon } from \"semantic-ui-react\";\n\nclass MessagesHeader extends React.Component {\n  render() {\n    const {\n      channelName,\n      numUniqueUsers,\n      handleSearchChange,\n      searchLoading,\n      isPrivateChannel,\n      handleStar,\n      isChannelStarred\n    } = this.props;\n\n    return (\n      <Segment clearing>\n        {/* Channel Title */}\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\n          <span>\n            {channelName}\n            {!isPrivateChannel && (\n              <Icon\n                onClick={handleStar}\n                name={isChannelStarred ? \"star\" : \"star outline\"}\n                color={isChannelStarred ? \"yellow\" : \"black\"}\n              />\n            )}\n          </span>\n          <Header.Subheader>{numUniqueUsers}</Header.Subheader>\n        </Header>\n\n        {/* Channel Search Input */}\n        <Header floated=\"right\">\n          <Input\n            loading={searchLoading}\n            onChange={handleSearchChange}\n            size=\"mini\"\n            icon=\"search\"\n            name=\"searchTerm\"\n            placeholder=\"Search Messages\"\n          />\n        </Header>\n      </Segment>\n    );\n  }\n}\n\nexport default MessagesHeader;\n","import React from \"react\";\nimport mime from \"mime-types\";\nimport { Modal, Input, Button, Icon } from \"semantic-ui-react\";\n\nclass FileModal extends React.Component {\n  state = {\n    file: null,\n    authorized: [\"image/jpeg\", \"image/png\"]\n  };\n\n  addFile = event => {\n    const file = event.target.files[0];\n    if (file) {\n      this.setState({ file });\n    }\n  };\n\n  sendFile = () => {\n    const { file } = this.state;\n    const { uploadFile, closeModal } = this.props;\n\n    if (file !== null) {\n      if (this.isAuthorized(file.name)) {\n        const metadata = { contentType: mime.lookup(file.name) };\n        uploadFile(file, metadata);\n        closeModal();\n        this.clearFile();\n      }\n    }\n  };\n\n  isAuthorized = filename =>\n    this.state.authorized.includes(mime.lookup(filename));\n\n  clearFile = () => this.setState({ file: null });\n\n  render() {\n    const { modal, closeModal } = this.props;\n\n    return (\n      <Modal basic open={modal} onClose={closeModal}>\n        <Modal.Header>Select an Image File</Modal.Header>\n        <Modal.Content>\n          <Input\n            onChange={this.addFile}\n            fluid\n            label=\"File types: jpg, png\"\n            name=\"file\"\n            type=\"file\"\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.sendFile} color=\"yellow\" inverted>\n            <Icon name=\"checkmark\" /> Send\n          </Button>\n          <Button color=\"red\" inverted onClick={closeModal}>\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default FileModal;\n","import React from \"react\";\nimport { Progress } from \"semantic-ui-react\";\n\nconst ProgressBar = ({ uploadState, percentUploaded }) =>\n  uploadState === \"uploading\" && (\n    <Progress\n      className=\"progress__bar\"\n      percent={percentUploaded}\n      progress\n      indicating\n      size=\"medium\"\n      inverted\n    />\n  );\n\nexport default ProgressBar;\n","import React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport firebase from \"../../firebase\";\n//import { val } from \"../../actions\";\nimport { Segment, Button, Input, Form } from \"semantic-ui-react\";\nimport { Picker, emojiIndex } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\nimport FileModal from \"./FileModal\";\nimport ProgressBar from \"./ProgressBar\";\n\nclass MessageForm extends React.Component {\n  state = {\n    storageRef: firebase.storage().ref(),\n    typingRef: firebase.database().ref(\"typing\"),\n    uploadTask: null,\n    uploadState: \"\",\n    percentUploaded: 0,\n    message: \"\",\n    channel: this.props.currentChannel,\n    user: this.props.currentUser,\n    loading: false,\n    errors: [],\n    modal: false,\n    emojiPicker: false\n  };\n\n  componentWillUnmount() {\n    if (this.state.uploadTask !== null) {\n      this.state.uploadTask.cancel();\n      this.setState({ uploadTask: null });\n    }\n  }\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleKeyDown = event => {\n    if (event.ctrlKey && event.keyCode === 13) {\n      this.sendMessage();\n    }\n\n    const { message, typingRef, channel, user } = this.state;\n\n    if (message) {\n      typingRef\n        .child(channel.id)\n        .child(user.uid)\n        .set(user.displayName);\n    } else {\n      typingRef\n        .child(channel.id)\n        .child(user.uid)\n        .remove();\n    }\n  };\n\n  handleTogglePicker = () => {\n    this.setState({ emojiPicker: !this.state.emojiPicker });\n  };\n\n  handleAddEmoji = emoji => {\n    const oldMessage = this.state.message;\n    const newMessage = this.colonToUnicode(` ${oldMessage} ${emoji.colons} `);\n    this.setState({ message: newMessage, emojiPicker: false });\n    setTimeout(() => this.messageInputRef.focus(), 0);\n  };\n\n  colonToUnicode = message => {\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, x => {\n      x = x.replace(/:/g, \"\");\n      let emoji = emojiIndex.emojis[x];\n      if (typeof emoji !== \"undefined\") {\n        let unicode = emoji.native;\n        if (typeof unicode !== \"undefined\") {\n          return unicode;\n        }\n      }\n      x = \":\" + x + \":\";\n      return x;\n    });\n  };\n\n  createMessage = (fileUrl = null) => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.state.user.uid,\n        name: this.state.user.displayName,\n        avatar: this.state.user.photoURL\n      }\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  sendMessage = () => {\n    const { getMessagesRef } = this.props;\n    const { message, channel, user, typingRef } = this.state;\n    let i=0;\n    let text=message.toLocaleLowerCase();\n    const arraynames=['piece of shit','bitch','motherfucker','bokachoda','bara','bal','damn',\n    'cunt','bastard','banchod','januar','khanki','khankir chele','gandu','lodu','chutiya','bantu','suor',\n     'bichi','nunu','fuck','asshole','betichod','chutiye','barar bal','hege','hagu','whore','baal','baaler chele','gud marani',\n    'sala','arse','kutta','coc','pod marani','chulkani',];\n    for(i=0;i<arraynames.length;i++){\n      if (text.includes(arraynames[i])){\n        alert(\"Do not use such words otherwise you will be banned 😒 \")\n        return false;\n      }\n    }\n    if (message) {\n      this.setState({ loading: true });\n      getMessagesRef()\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\", errors: [] });\n          typingRef\n            .child(channel.id)\n            .child(user.uid)\n            .remove();\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err)\n          });\n        });\n    } else {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Add a message\" })\n      });\n    }\n  };\n\n  getPath = () => {\n    if (this.props.isPrivateChannel) {\n      return `chat/private/{this.state.channel.id}`;\n    } else {\n      return \"chat/public\";\n    }\n  };\n\n  uploadFile = (file, metadata) => {\n    const pathToUpload = this.state.channel.id;\n    const ref = this.props.getMessagesRef();\n    const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          snap => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n            this.setState({ percentUploaded });\n          },\n          err => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null\n            });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadUrl => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch(err => {\n                console.error(err);\n                this.setState({\n                  errors: this.state.errors.concat(err),\n                  uploadState: \"error\",\n                  uploadTask: null\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err)\n        });\n      });\n  };\n\n  render() {\n    // prettier-ignore\n    const { errors, message, loading, modal, uploadState, percentUploaded, emojiPicker } = this.state;\n\n    return (\n      <Segment className=\"message__form\" >\n\n        {emojiPicker && (\n          <Picker\n            set=\"apple\"\n            onSelect={this.handleAddEmoji}\n            className=\"emojipicker\"\n            title=\"Pick your emoji\"\n            emoji=\"point_up\"\n          />\n        )}\n        \n        <Input\n          fluid\n          name=\"message\"\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyDown}\n          value={message}\n          ref={node => (this.messageInputRef = node)}\n          style={{ marginBottom: \"0.7em\" }}\n          label={\n            <Button\n              icon={emojiPicker ? \"close\" : \"add\"}\n              content={emojiPicker ? \"Close\" : null}\n              onClick={this.handleTogglePicker}\n            />\n          }\n          labelPosition=\"left\"\n          className={\n            errors.some(error => error.message.includes(\"message\"))\n              ? \"error\"\n              : \"\"\n          }\n          placeholder=\"Write your message\"\n        \n        />\n        \n        \n        <Button.Group icon widths=\"2\">\n          <Button\n            onClick={this.sendMessage}\n            disabled={loading}\n            color=\"orange\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n            \n          />\n          <Button\n            color=\"teal\"\n            disabled={uploadState === \"uploading\"}\n            onClick={this.openModal}\n            content=\"Upload Media\"\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n          />\n        </Button.Group>\n        <FileModal\n          modal={modal}\n          closeModal={this.closeModal}\n          uploadFile={this.uploadFile}\n        />\n        <ProgressBar\n          uploadState={uploadState}\n          percentUploaded={percentUploaded}\n        />\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Image } from \"semantic-ui-react\";\n//import {bg} from \"../Messages\";\n//{ bg=='1'?(message.user.name):(Anonymous)}\n\nconst isOwnMessage = (message, user) => {\n  return message.user.id === user.uid ? \"message__self\" : \"\";\n};\n\nconst isImage = message => {\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\n};\n\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\n\nconst Message = ({ message, user }) => (\n  <Comment>\n    <Comment.Avatar src={message.user.avatar} />\n    <Comment.Content className={isOwnMessage(message, user)}>\n      <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\n      <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n      {isImage(message) ? (\n        <Image src={message.image} className=\"message__image\" />\n      ) : (\n        <Comment.Text>{message.content}</Comment.Text>\n      )}\n    </Comment.Content>\n  </Comment>\n);\n\nexport default Message;\n","import React from 'react';\n\nconst Typing = () => (\n  <div className=\"typing\">\n    <div className=\"typing__dot\"></div>\n    <div className=\"typing__dot\"></div>\n    <div className=\"typing__dot\"></div>\n  </div>\n)\n\nexport default Typing;","import React from \"react\";\n\nconst Skeleton = () => (\n  <div className=\"skeleton\">\n    <div className=\"skeleton__avatar\" />\n    <div className=\"skeleton__author\" />\n    <div className=\"skeleton__details\" />\n  </div>\n);\n\nexport default Skeleton;\n","import React from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { setUserPosts } from \"../../actions\";\nimport firebase from \"../../firebase\";\n\nimport MessagesHeader from \"./MessagesHeader\";\nimport MessageForm from \"./MessageForm\";\nimport Message from \"./Message\";\nimport Typing from \"./Typing\";\nimport Skeleton from \"./Skeleton\";\n\nclass Messages extends React.Component {\n  state = {\n    privateChannel: this.props.isPrivateChannel,\n    privateMessagesRef: firebase.database().ref(\"privateMessages\"),\n    messagesRef: firebase.database().ref(\"messages\"),\n    messages: [],\n    messagesLoading: true,\n    channel: this.props.currentChannel,\n    isChannelStarred: false,\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    numUniqueUsers: \"\",\n    searchTerm: \"\",\n    searchLoading: false,\n    searchResults: [],\n    typingRef: firebase.database().ref(\"typing\"),\n    typingUsers: [],\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    listeners: []\n  };\n\n  componentDidMount() {\n    const { channel, user, listeners } = this.state;\n\n    if (channel && user) {\n      this.removeListeners(listeners);\n      this.addListeners(channel.id);\n      this.addUserStarsListener(channel.id, user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners(this.state.listeners);\n    this.state.connectedRef.off();\n  }\n\n  removeListeners = listeners => {\n    listeners.forEach(listener => {\n      listener.ref.child(listener.id).off(listener.event);\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesEnd) {\n      this.scrollToBottom();\n    }\n  }\n\n  addToListeners = (id, ref, event) => {\n    const index = this.state.listeners.findIndex(listener => {\n      return (\n        listener.id === id && listener.ref === ref && listener.event === event\n      );\n    });\n\n    if (index === -1) {\n      const newListener = { id, ref, event };\n      this.setState({ listeners: this.state.listeners.concat(newListener) });\n    }\n  };\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  addListeners = channelId => {\n    this.addMessageListener(channelId);\n    this.addTypingListeners(channelId);\n  };\n\n  addTypingListeners = channelId => {\n    let typingUsers = [];\n    this.state.typingRef.child(channelId).on(\"child_added\", snap => {\n      if (snap.key !== this.state.user.uid) {\n        typingUsers = typingUsers.concat({\n          id: snap.key,\n          name: snap.val()\n        });\n        this.setState({ typingUsers });\n      }\n    });\n    this.addToListeners(channelId, this.state.typingRef, \"child_added\");\n\n    this.state.typingRef.child(channelId).on(\"child_removed\", snap => {\n      const index = typingUsers.findIndex(user => user.id === snap.key);\n      if (index !== -1) {\n        typingUsers = typingUsers.filter(user => user.id !== snap.key);\n        this.setState({ typingUsers });\n      }\n    });\n    this.addToListeners(channelId, this.state.typingRef, \"child_removed\");\n\n    this.state.connectedRef.on(\"value\", snap => {\n      if (snap.val() === true) {\n        this.state.typingRef\n          .child(channelId)\n          .child(this.state.user.uid)\n          .onDisconnect()\n          .remove(err => {\n            if (err !== null) {\n              console.error(err);\n            }\n          });\n      }\n    });\n  };\n\n  addMessageListener = channelId => {\n    let loadedMessages = [];\n    const ref = this.getMessagesRef();\n    ref.child(channelId).on(\"child_added\", snap => {\n      loadedMessages.push(snap.val());\n      this.setState({\n        messages: loadedMessages,\n        messagesLoading: false\n      });\n      this.countUniqueUsers(loadedMessages);\n      this.countUserPosts(loadedMessages);\n    });\n    this.addToListeners(channelId, ref, \"child_added\");\n  };\n\n  addUserStarsListener = (channelId, userId) => {\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .once(\"value\")\n      .then(data => {\n        if (data.val() !== null) {\n          const channelIds = Object.keys(data.val());\n          const prevStarred = channelIds.includes(channelId);\n          this.setState({ isChannelStarred: prevStarred });\n        }\n      });\n  };\n\n  getMessagesRef = () => {\n    const { messagesRef, privateMessagesRef, privateChannel } = this.state;\n    return privateChannel ? privateMessagesRef : messagesRef;\n  };\n\n  handleStar = () => {\n    this.setState(\n      prevState => ({\n        isChannelStarred: !prevState.isChannelStarred\n      }),\n      () => this.starChannel()\n    );\n  };\n\n  starChannel = () => {\n    if (this.state.isChannelStarred) {\n      this.state.usersRef.child(`${this.state.user.uid}/starred`).update({\n        [this.state.channel.id]: {\n          name: this.state.channel.name,\n          details: this.state.channel.details,\n          createdBy: {\n            name: this.state.channel.createdBy.name,\n            avatar: this.state.channel.createdBy.avatar\n          }\n        }\n      });\n    } else {\n      this.state.usersRef\n        .child(`${this.state.user.uid}/starred`)\n        .child(this.state.channel.id)\n        .remove(err => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n    }\n  };\n\n  handleSearchChange = event => {\n    this.setState(\n      {\n        searchTerm: event.target.value,\n        searchLoading: true\n      },\n      () => this.handleSearchMessages()\n    );\n  };\n\n  handleSearchMessages = () => {\n    const channelMessages = [...this.state.messages];\n    const regex = new RegExp(this.state.searchTerm, \"gi\");\n    const searchResults = channelMessages.reduce((acc, message) => {\n      if (\n        (message.content && message.content.match(regex)) ||\n        message.user.name.match(regex)\n      ) {\n        acc.push(message);\n      }\n      return acc;\n    }, []);\n    this.setState({ searchResults });\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\n  };\n\n  countUniqueUsers = messages => {\n    const uniqueUsers = messages.reduce((acc, message) => {\n      if (!acc.includes(message.user.name)) {\n        acc.push(message.user.name);\n      }\n      return acc;\n    }, []);\n    const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? \"s\" : \"\"}`;\n    this.setState({ numUniqueUsers });\n  };\n\n  countUserPosts = messages => {\n    let userPosts = messages.reduce((acc, message) => {\n      if (message.user.name in acc) {\n        acc[message.user.name].count += 1;\n      } else {\n        acc[message.user.name] = {\n          avatar: message.user.avatar,\n          count: 1\n        };\n      }\n      return acc;\n    }, {});\n    this.props.setUserPosts(userPosts);\n  };\n\n  displayMessages = messages =>\n    messages.length > 0 &&\n    messages.map(message => (\n      <Message\n        key={message.timestamp}\n        message={message}\n        user={this.state.user}\n      />\n    ));\n\n  displayChannelName = channel => {\n    return channel\n      ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`\n      : \"\";\n  };\n\n  displayTypingUsers = users =>\n    users.length > 0 &&\n    users.map(user => (\n      <div\n        style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"0.2em\" }}\n        key={user.id}\n      >\n        <span className=\"user__typing\">{user.name} is typing</span> <Typing />\n      </div>\n    ));\n\n  displayMessageSkeleton = loading =>\n    loading ? (\n      <React.Fragment>\n        {[...Array(10)].map((_, i) => (\n          <Skeleton key={i} />\n        ))}\n      </React.Fragment>\n    ) : null;\n\n  render() {\n    // prettier-ignore\n    const { messagesRef, messages, channel, user, numUniqueUsers, searchTerm, searchResults, searchLoading, privateChannel, isChannelStarred, typingUsers, messagesLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        <MessagesHeader\n          channelName={this.displayChannelName(channel)}\n          numUniqueUsers={numUniqueUsers}\n          handleSearchChange={this.handleSearchChange}\n          searchLoading={searchLoading}\n          isPrivateChannel={privateChannel}\n          handleStar={this.handleStar}\n          isChannelStarred={isChannelStarred}\n        />\n\n        <Segment>\n          <Comment.Group className=\"messages\">\n            {this.displayMessageSkeleton(messagesLoading)}\n            {searchTerm\n              ? this.displayMessages(searchResults)\n              : this.displayMessages(messages)}\n            {this.displayTypingUsers(typingUsers)}\n            <div ref={node => (this.messagesEnd = node)} />\n          </Comment.Group>\n        </Segment>\n\n        <MessageForm\n          messagesRef={messagesRef}\n          currentChannel={channel}\n          currentUser={user}\n          isPrivateChannel={privateChannel}\n          getMessagesRef={this.getMessagesRef}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setUserPosts }\n)(Messages);\n","import React from \"react\";\nimport {\n  Segment,\n  Accordion,\n  Header,\n  Icon,\n  Image,\n  List\n} from \"semantic-ui-react\";\n\nclass MetaPanel extends React.Component {\n  state = {\n    channel: this.props.currentChannel,\n    privateChannel: this.props.isPrivateChannel,\n    activeIndex: 0\n  };\n\n  setActiveIndex = (event, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n    this.setState({ activeIndex: newIndex });\n  };\n\n  formatCount = num => (num > 1 || num === 0 ? `${num} posts` : `${num} post`);\n\n  displayTopPosters = posts =>\n    Object.entries(posts)\n      .sort((a, b) => b[1] - a[1])\n      .map(([key, val], i) => (\n        <List.Item key={i}>\n          <Image avatar src={val.avatar} />\n          <List.Content>\n            <List.Header as=\"a\">{key}</List.Header>\n            <List.Description>{this.formatCount(val.count)}</List.Description>\n          </List.Content>\n        </List.Item>\n      ))\n      .slice(0, 2);\n\n  render() {\n    const { activeIndex, privateChannel, channel } = this.state;\n    const { userPosts } = this.props;\n\n    if (privateChannel) return null;\n\n    return (\n      <Segment loading={!channel}>\n        <Header as=\"h3\" attached=\"top\">\n          About # {channel && channel.name}\n        </Header>\n        <Accordion styled attached=\"true\">\n          <Accordion.Title\n            active={activeIndex === 0}\n            index={0}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"info\" />\n            Channel Details\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 0}>\n            {channel && channel.details}\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 1}\n            index={1}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"user circle\" />\n            Top Posters\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 1}>\n            <List>{userPosts && this.displayTopPosters(userPosts)}</List>\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 2}\n            index={2}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"pencil alternate\" />\n            Created By\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 2}>\n            <Header as=\"h3\">\n              <Image circular src={channel && channel.createdBy.avatar} />\n              {channel && channel.createdBy.name}\n            </Header>\n          </Accordion.Content>\n        </Accordion>\n      </Segment>\n    );\n  }\n}\n\nexport default MetaPanel;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { useState } from \"react\";\nimport ColorPanel from \"./ColorPanel/ColorPanel\";\nimport SidePanel from \"./SidePanel/SidePanel\";\nimport Messages from \"./Messages/Messages\";\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\n\n// prettier-ignore\nconst App = (\n  \n  { currentUser, currentChannel, isPrivateChannel, userPosts, primaryColor, secondaryColor }) => (\n  <Grid columns=\"equal\" className=\"app\" style={{ background: secondaryColor }}>\n    <ColorPanel\n      key={currentUser && currentUser.name}\n      currentUser={currentUser}\n    />\n    <SidePanel\n      key={currentUser && currentUser.uid}\n      currentUser={currentUser}\n      primaryColor={primaryColor}\n    />\n\n    <Grid.Column style={{ marginLeft: 320 }}>\n      <Messages\n        key={currentChannel && currentChannel.id}\n        currentChannel={currentChannel}\n        currentUser={currentUser}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n\n    <Grid.Column width={4}>\n      <MetaPanel\n        key={currentChannel && currentChannel.name}\n        userPosts={userPosts}\n        currentChannel={currentChannel}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n  </Grid>\n);\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n  userPosts: state.channel.userPosts,\n  primaryColor: state.colors.primaryColor,\n  secondaryColor: state.colors.secondaryColor\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: [],\n    loading: false\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(signedInUser => {\n          console.log(signedInUser);\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  isFormValid = ({ email, password }) => email && password;\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const { email, password, errors, loading } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\n            <Icon name=\"comment\" color=\"violet\" />\n            Login to eConnect Chat\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"violet\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Don't have an account? <Link to=\"/register\">Register</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Register extends React.Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref(\"users\")\n  };\n\n  isFormValid = () => {\n    let errors = [];\n    let error;\n\n    if (this.isFormEmpty(this.state)) {\n      error = { message: \"Fill in all fields\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else if (!this.isPasswordValid(this.state)) {\n      error = { message: \"Password is invalid\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\n    return (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !passwordConfirmation.length\n    );\n  };\n\n  isPasswordValid = ({ password, passwordConfirmation }) => {\n    if (password.length < 6 || passwordConfirmation.length < 6) {\n      return false;\n    } else if (password !== passwordConfirmation) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid()) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then(createdUser => {\n          console.log(createdUser);\n          createdUser.user\n            .updateProfile({\n              displayName: this.state.username,\n              photoURL: `http://gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              this.saveUser(createdUser).then(() => {\n                console.log(\"user saved\");\n              });\n            })\n            .catch(err => {\n              console.error(err);\n              this.setState({\n                errors: this.state.errors.concat(err),\n                loading: false\n              });\n            });\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  saveUser = createdUser => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL\n    });\n  };\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n      errors,\n      loading\n    } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"orange\" textAlign=\"center\">\n            <Icon name=\"comment outline\" color=\"orange\" />\n            Register for eConnect Chat\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"username\"\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                onChange={this.handleChange}\n                value={username}\n                type=\"text\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"passwordConfirmation\"\n                icon=\"repeat\"\n                iconPosition=\"left\"\n                placeholder=\"Password Confirmation\"\n                onChange={this.handleChange}\n                value={passwordConfirmation}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"orange\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Already a user? <Link to=\"/login\">Login</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nconst Spinner = () => (\n  <Dimmer active>\n    <Loader size=\"huge\" content={\"Preparing Chat...\"} />\n  </Dimmer>\n);\n\nexport default Spinner;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport * as actionTypes from \"../actions/types\";\n\nconst initialUserState = {\n  currentUser: null,\n  isLoading: true\n};\n\nconst user_reducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        currentUser: action.payload.currentUser,\n        isLoading: false\n      };\n    case actionTypes.CLEAR_USER:\n      return {\n        ...state,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialChannelState = {\n  currentChannel: null,\n  isPrivateChannel: false,\n  userPosts: null\n};\n\nconst channel_reducer = (state = initialChannelState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload.currentChannel\n      };\n    case actionTypes.SET_PRIVATE_CHANNEL:\n      return {\n        ...state,\n        isPrivateChannel: action.payload.isPrivateChannel\n      };\n    case actionTypes.SET_USER_POSTS:\n      return {\n        ...state,\n        userPosts: action.payload.userPosts\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialColorsState = {\n  primaryColor: \"#5E5D59\",\n  secondaryColor: \"#eee\"\n};\n\nconst colors_reducer = (state = initialColorsState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_COLORS:\n      return {\n        primaryColor: action.payload.primaryColor,\n        secondaryColor: action.payload.secondaryColor\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  user: user_reducer,\n  channel: channel_reducer,\n  colors: colors_reducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport Spinner from \"./Spinner\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport firebase from \"./firebase\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\n\nimport { createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport { setUser, clearUser } from \"./actions\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends React.Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // console.log(user);\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n      } else {\n        this.props.history.push(\"/login\");\n        this.props.clearUser();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateFromProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nconst RootWithAuth = withRouter(\n  connect(\n    mapStateFromProps,\n    { setUser, clearUser }\n  )(Root)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <RootWithAuth />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}